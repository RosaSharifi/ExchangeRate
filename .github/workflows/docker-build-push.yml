name: Docker Build and Push

on:
  workflow_dispatch: # Allows manual triggering
    inputs:
      tag_choice:
        description: 'Choose tag method'
        required: true
        default: 'use_version'
        type: choice
        options:
          - 'use_version'
          - 'custom_tag'
      tagName:
        description: 'Enter custom tag name'
        type: string
        required: false
      build_latest:
        description: 'Build and push the latest image?'
        required: true
        default: false
        type: boolean

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract version
        id: extract_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_ENV


      - name: Set Docker tag
        id: set_tag
        run: |
          TAG_CHOICE="${{ github.event.inputs.tag_choice }}"
          CUSTOM_TAG="${{ github.event.inputs.custom_tag }}"
          
          if [ "$TAG_CHOICE" = "custom_tag" ]; then
            if [ -z "$CUSTOM_TAG" ]; then
              echo "$CUSTOM_TAG"
              echo "Error: Custom tag cannot be empty when tag_choice is 'custom_tag'"
              exit 1
            fi
            echo "TAG=$CUSTOM_TAG" >> $GITHUB_ENV
          else
            echo "TAG=${{ env.VERSION }}" >> $GITHUB_ENV
          fi
          
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots clean install
        
      - name: Build and push Docker image with version tag
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/exchange_rate:${{ env.TAG }}
          file: Dockerfile

      - name: Build and push Docker image with latest tag
        if: ${{ github.event.inputs.build_latest == 'true' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/exchange_rate:latest
          file: Dockerfile

      - name: Log out from Docker Hub
        run: docker logout
